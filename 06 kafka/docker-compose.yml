version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: archdb
      POSTGRES_DB: profi_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: archdb
      POSTGRES_DB: profi_db
      SQLALCHEMY_DATABASE_URL: postgresql://postgres:archdb@db/profi_db
      MONGO_URI: mongodb://root:pass@mongo:27017/
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - db
      - mongo
      - redis
      - kafka
    command: >
      sh -c "sleep 10 && python init_mongo.py && python init_db.py && uvicorn profi_ru:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app

  service-consumer:
    build: .
    command: python service_consumer.py
    depends_on:
      - db
      - kafka

volumes:
  postgres_data:
  mongo_data: